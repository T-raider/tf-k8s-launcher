---
# tasks file for k8s_master_conf
- name: "Installing docker"
  ansible.builtin.package:
    name: "docker"
    state: present

- name: "Starting and enabling docker"
  ansible.builtin.service:
    enabled: true
    name: "docker"
    state: started

- name: "Configuring yum for kubeadm"
  ansible.builtin.yum_repository:
    name: "kubernetes"
    description: "repo for kubernetes"
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
    enabled: true
    repo_gpgcheck: true
    gpgcheck: true
    gpgkey:
      - "https://packages.cloud.google.com/yum/doc/yum-key.gpg"
      - "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"

- name: "Installing kubelet, kubeadm & kubectl"
  ansible.builtin.yum:
    name: "{{ item.package_name }}"
    disable_excludes: "kubernetes"
    state: present

  loop:
    - { package_name: "kubelet" }
    - { package_name: "kubeadm" }
    - { package_name: "kubectl" }

- name: "Starting and enabling kubelet"
  ansible.builtin.service:
    enabled: true
    name: "kubelet"
    state: started

- name: "Pulling images ..."
  ansible.builtin.command:
    cmd: "kubeadm config images pull"
  changed_when: false

- name: "Creating daemon.js"
  ansible.builtin.file:
    path: "/etc/docker/daemon.js"
    state: touch
    mode: u=rwx,g=rwx,o=rwx

- name: "Changing docker driver to systemd"
  ansible.builtin.blockinfile:
    path: "/etc/docker/daemon.js"
    block: |
      {
      "exec-opts":["native.cgroupdriver=systemd"]
      }
    state: present

- name: "Restarting docker"
  ansible.builtin.service:
    name: "docker"
    state: restarted

- name: "Installing iproute-tc"
  ansible.builtin.package:
    name: "iproute-tc"
    state: present

- name: "Configuring bridge-nf-call-iptables"
  ansible.builtin.lineinfile:
    path: "/proc/sys/net/bridge/bridge-nf-call-iptables"
    line: "1"
    state: present

- name: "Getting public IP of master node"
  ansible.builtin.uri:
    url: "http://169.254.169.254/latest/meta-data/public-ipv4"
    return_content: true
  register: master_node_public_ip

- name: "Building cluster init file"
  ansible.builtin.copy:
    dest: "/home/ec2-user/cluster-init.sh"
    content: |
      #!/bin/bash
      kubeadm init \
      --apiserver-cert-extra-sans={{ master_node_public_ip.content }} \
      --pod-network-cidr=10.244.0.0/16 \
      --ignore-preflight-errors=NumCPU \
      --ignore-preflight-errors=Mem
    mode: u=rwx,g=rwx,o=rwx

- name: "Initializing..."
  ansible.builtin.command:
    cmd: "sh /home/ec2-user/cluster-init.sh"
  changed_when: false

- name: "Making .kube directory"
  ansible.builtin.command:
    cmd: "{{ item.command }}"

  loop:
    - { command: "mkdir -p /root/.kube" }
    - { command: "sudo cp -i /etc/kubernetes/admin.conf /root/.kube/config" }
    - { command: "sudo cp -i /etc/kubernetes/admin.conf /home/ec2-user/admin.conf" }

  changed_when: false

- name: "Replacing private with public IP of master in admin.conf"
  ansible.builtin.replace:
    path: "/home/ec2-user/admin.conf"
    regexp: "{{ ansible_default_ipv4.address }}"
    replace: "{{ master_node_public_ip.content }}"

- name: "Changing permissions for .kube/config"
  ansible.builtin.file:
    path: $HOME/.kube/config
    owner: "{{ ansible_effective_user_id }}"
    group: "{{ ansible_effective_group_id }}"
    mode: u=rw,g=r,o=r

- name: "Applying flannel config"
  ansible.builtin.command:
    cmd: "kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"
  changed_when: false

- name: "Creating cluster join automation file"
  ansible.builtin.copy:
    dest: "/home/ec2-user/cj-automation.sh"
    content: |
      #!/bin/bash
      kubeadm token create --print-join-command > /home/ec2-user/token_file.txt
    mode: u=rwx,g=rwx,o=rwx

- name: "Creating cluster join token file"
  ansible.builtin.command:
    cmd: "sh /home/ec2-user/cj-automation.sh"
  changed_when: false

- name: "Fetching cluster join token file"
  ansible.builtin.fetch:
    src: "/home/ec2-user/token_file.txt"
    dest: "../"
    flat: true

- name: "Fetching admin.conf file"
  ansible.builtin.fetch:
    src: "/home/ec2-user/admin.conf"
    dest: "../"
    flat: true
